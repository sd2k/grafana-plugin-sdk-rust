initSidebarItems({"attr":[["async_trait","Re-export of `async_trait` proc macro, so plugin implementations don’t have to import tonic manually."]],"enum":[["ConversionError","Errors occurring when trying to interpret data passed from Grafana to this SDK."],["Error","Errors returned by plugin backends."],["HealthStatus","The health status of a plugin."],["Role","A role within Grafana."],["SubscribeStreamStatus","The status of a subscribe stream response."]],"fn":[["initialize","Initialize the plugin, returning the [`TcpListener`] that the gRPC service should serve on."],["layer","Create a `tracing` [`Layer`][tracing_subscriber::Layer] configured to log events in a format understood by Grafana."]],"struct":[["AppInstanceSettings","Settings for an app instance."],["CallResourceRequest","A request for a resource call."],["CheckHealthRequest","A request to check the health of a plugin."],["CheckHealthResponse","The response to a health check request."],["CollectMetricsRequest","A request to collect metrics about a plugin."],["CollectMetricsResponse","A response to a metric collection request."],["DataQuery","A query made by Grafana to the plugin as part of a [`QueryDataRequest`]."],["DataResponse","The results from a [`DataQuery`]."],["DataSourceInstanceSettings","Settings for a datasource instance."],["HCLogJson","A [`tracing`] event formatter which writes events in a format compatible with hclog."],["InitialData","Data returned from an initial request to subscribe to a stream."],["MetricsPayload","Metrics collected from a plugin as part of a collect metrics."],["Plugin","Main entrypoint into the Grafana plugin SDK."],["PluginContext","Holds contextual information about a plugin request: Grafana org, user, and plugin instance settings."],["PublishStreamRequest","A request to publish data to a stream."],["PublishStreamResponse","The response to a stream publish request."],["QueryDataRequest","A request for data made by Grafana."],["RunStreamRequest","A request to ‘run’ a stream, i.e. begin streaming data."],["StreamPacket","A packet of data to be streamed back to the subscribed client."],["SubscribeStreamRequest","A request to subscribe to a stream."],["SubscribeStreamResponse","The response to a stream subscription request."],["TimeRange","The time range for a query."],["User","A Grafana user."]],"trait":[["DataQueryError","Error supertrait used in [`DataService::query_data`]."],["DataService","Used to respond for requests for data from datasources and app plugins."],["DiagnosticsService","Trait for services that provide a health check and/or metric collection endpoint."],["IntoHttpResponse","Trait indicating that a type can be fallibly converted into a `http::Response<Bytes>`."],["ResourceService","Trait for plugins that can handle arbitrary resource requests."],["StreamService","Trait for plugins that wish to provide uni- or bi-directional streaming."]],"type":[["BoxDataResponseIter","Type alias for a boxed iterator of query responses, useful for returning from [`DataService::query_data`]."],["BoxResourceFuture","Type alias for a pinned, boxed future with a fallible HTTP response as output, with a custom error type."],["BoxResourceStream","Type alias for a pinned, boxed stream of HTTP responses with a custom error type."],["BoxRunStream","Type alias for a pinned, boxed stream of stream packets with a custom error type."]]});